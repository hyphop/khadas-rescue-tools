#!/bin/bash

## hyphop ##

#= kresq project generator

DIR="$(dirname $0)"
BN=$(basename $0)

cd "$DIR"
DP="$(realpath .)"

#N=${DP%/*}
N=${DP}
N=${N##*/}
M=${N%.krescue}

M="../../img/$M"
MP="$(realpath $M)"

CMP_LEVEL="-22 -T2"

AP=aml_image_v2_packer
FENIX=fenix/build/utils-*/flash-tool/tools
for AML_IMAGE_PACKER_PATH in ../../../../$FENIX ""; do
    [ -e "$AML_IMAGE_PACKER_PATH/$AP" ] && break
done

case $PATH in
    */opt/bin:*);;
    *)PATH="$(realpath $AML_IMAGE_PACKER_PATH):$(realpath ../../opt/bin):$PATH";;
esac

DATE=$(TZ= date)

CONF=$BN.conf
COND=$BN.conf
COND=${COND#./}
VARIANT=
[ "$1" ] && {
[  -f "$1" ] || VARIANT=".$1"
}
[ -f "$1" ] && VARIANT="$1"
[ "${VARIANT##*/}" = "${CONF##*/}" ] && VARIANT=
[ "$VARIANT" ] || {
    [ -L $CONF ] && VARIANT=$(readlink $CONF)
}
VARIANT=${VARIANT#$COND}
echo "[i] VARIANT: $VARIANT">&2
CONF=$CONF$VARIANT
[ -f $CONF ] || {
    echo "[e] config $CONF missed">&2
    exit 1
}

M=$M$VARIANT

echo "[i] CONFIG $CONF">&2

. $CONF # config include

echo "[i] started $N -> $M">&2

#exit 0

mkdir -p "$M"

cd $M



DL="dl"
#TPL=boot.atv.v2.tar.gz
CNF_=krescue.image.conf
CNF=.$CNF_
R=README.txt
META=".meta"
OUT=".boot"

DIE(){
    echo "[e] DIE $@">&2
    exit 1
}


[ "$bsdtar" ] || \
bsdtar="$(which bsdtar)"
[ $? = 0 ] || DIE bsdtar ! plz install bsdtar

[ "$aml_image_v2_packer" ] || \
aml_image_v2_packer=$(which aml_image_v2_packer)
[ $? = 0 ] || DIE aml_image_v2_packer not found! plz install it

##
##

CMD(){
    echo "# $@">&2
    $@
}


MATCH=
for VIM in $BOARDS; do
MATCH="BOARD=$VIM $MATCH"
done

DESC="$NAME"


[ "$TPL" ] || \
    TPL=$CNF_.tpl

[ -s "$TPL" ] || {
    [ -s "$DP/$TPL" ] || DIE "Template not found"
    TPL="$DP/$TPL"
}

echo "[i] copy kresq config from template $(basename "$TPL") ($NAME $DATE)"

. $TPL > $CNF || FAIL template not found

[ -d BLANK ] || \
    mkdir BLANK

[ -d $META ] || mkdir -p $META
[ -d $DL ] || mkdir -p $DL

../../scripts/download "$LINK" "$IMG" $DL || DIE


IMG_="$DL/$IMG"
IMG2="$DL/${IMG%.7z}.img"

echo "[i] $IMG2"

[ -s "$IMG2.md5sum" ] || {
    echo "[i] 7zr -so e $IMG_ > $IMG2">&2
    $bsdtar -O -xf "$IMG_" '*.img' > $IMG2 || DIE
    md5sum $IMG2 > $IMG2.md5sum
}

[ -d "$OUT" ] || \
    mkdir $OUT

[ -f $OUT/unpacked ] || {
CMD $aml_image_v2_packer -d $IMG2 "$OUT" || DIE


[ -s $IMG2 ] && truncate -s0 $IMG2

../../scripts/sparseimg2img $OUT #|| {
    
#    rm $IMG2
#    rm $IMG2.md5sum

#    DIE "$OUT"
#}

date > $OUT/unpacked

}

cd $OUT

#exit 0

for r in *.ini *.conf *.cfg *.xml bootloader.* *.USB; do
    CMD rm -f "$r"
done
cd ..

for p in $OUT/*.raw; do

[ -s $p ] || continue
[ -L $p ] && continue
[ -f $p ] || continue
[ -f $p.packed ] && continue

echo "[i] compress partition $p">&2

CMD ../../scripts/xze -e -T0 -9 $p || FAIL compress
echo $p.xz > $p.packed

CMD truncate -s0 $p

done


[ -f $R ] || {
    echo "[i] create README: $R">&2
    echo "# SOURCES
NAME:      $IMG
SOURCE:    $LINK0

IMAGE_URL: $LINK

## BUILD IMAGE

../../image/make_image

" > $R
}

echo "[i] project is ready: $MP">&2

#exit 0

CMD ../../image/make_image

