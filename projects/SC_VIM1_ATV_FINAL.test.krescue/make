#!/bin/sh

## hyphop ##

#= make kresq 

DIR="$(dirname $0)"
DP="$(realpath $DIR)"
#N=${DP%/*}
N=${DP}
N=${N##*/}
M=${N%.krescue}
M="../../img/$M"
MP="$(realpath $M)"

echo "[i] started $N -> $M">&2
mkdir -p "$M"

cd $M

IMG=SC_VIM1_DEBUG_ATV-v2.0-20200130.7z
LINK='https://mega.nz/#!ItRCgIjS!G6NgnVhAcGj-5DY_RrDmSf92lkXjLhLbyPD4UnsGcCg'
#LINK='https://mega.nz/#!Wo8jhILB!WJAoj87K3hvpmVafUUgvMr7kDZRoSMdXllB-AMjixDc'

DL="dl"
TPL=boot.atv.v2.tar.gz
CNF_=krescue.image.conf
CNF=.$CNF_
R=README.txt
META=".meta"
OUT=".boot"


[ "$z7r" ] || \
z7r="$(which 7zr)"
[ $? = 0 ] || {
    echo "[e] 7zr not found! plz install it">&2
    exit 1
}
[ "$aml_image_v2_packer" ] || \
aml_image_v2_packer=$(which aml_image_v2_packer)
[ $? = 0 ] || {
    echo "[e] aml_image_v2_packer not found! plz install it">&2
    exit 1
}


##
##

CMD(){
    echo "# $@">&2
    $@
}

[ -f $R ] || {
    echo "[i] create README: $R">&2
    echo "$IMG
$LINK
" > $R
}


[ -f "../$CNF" ] || {
    echo "[i] copy kresq config from template"
    CMD cp $DP/$CNF_ $CNF
}

[ -d $META ] || mkdir -p $META
[ -d $DL ] || mkdir -p $DL

DIE(){
    echo "[e] DIE">&2
    exit 1
}

../../scripts/download "$LINK" "$IMG" $DL || DIE

IMG_="$DL/$IMG"
IMG2="$DL/${IMG%.7z}.img"

echo "[i] $IMG2"

[ -f "$IMG2" ] || {
    echo "[i] 7zr -so e $IMG_ > $IMG2">&2
    $z7r -so e "$IMG_" > $IMG2 || DIE
}

[ -d "$OUT" ] || {
    CMD tar -xf $DP/$TPL || DIE
    CMD mv boot $OUT
}

#[ -f $OUT/aml_sdc_burn.ini -a 
[ -f $OUT/unpacked ] || {
CMD $aml_image_v2_packer -d $IMG2 "$OUT" || DIE

date > $OUT/unpacked

[ -s $IMG2 ] && truncate -s0 $IMG2

for R in aml_sdc_burn.ini  DDR.USB  image.cfg  platform.conf  UBOOT.USB; do
    CMD rm "$OUT/$R"
done

../../scripts/sparseimg2img $OUT

}

for p in $OUT/*.raw; do
CMD ../../scripts/zstde --max $p ${p%.*}.zstd || DIE
CMD rm $p
done

echo "[i] project is ready: $MP">&2

CMD make_image

